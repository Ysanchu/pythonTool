#!/usr/bin/python
# -*- coding: utf-8 -*-
import sys,os,re,csv,pwd,subprocess
import pexpect
import pdb
#import termcolor

"""
python作成の定型文
Usage :
"""

__author__  = 'SANCHU'
__version__ = '1.0.0'
__date__    = 'YYYY/MM/DD'

PASSWORD_PROMPTS=["パスワード:", "password:"]
ROOT_PROMPT='#'
ROOT_PASSWORD='yasuyuki'
USER_PROMPT='\$'
USER_PASSWORD='yasuyuki'
DEBUG_LOG  = None
RESULT_LOG = 'result.log'
 

def fileRead():
    # 結果ファイル
    resultLogFile = open(RESULT_LOG , "w"),
    # SSHリストファイル読み込み
    fileName = "ssh.list"
    # ファイルオープン
    with open(fileName,"r") as file:
        # 1行ずつ読み込み
        for line in file:
            # リストファイル文字列確認 (空白行、コメントの無視対応)
            strChk = re.match(r"#|^\n", line)
            if strChk:
                continue
            # 文字列の空白、改行削除 (先頭・末尾)
            line = line.strip()
            # カンマ区切り
            splitStr = line.split(',')
            try:
                passStr = splitStr[0].strip()   # パスワード文字列
                sshCom  = splitStr[1].strip()   # sshコマンド文字列
            except:
                print(line + " : 読み込みエラー")
                continue
            sys.stdout.write('  ★ ' + sshCom)
            # ssh接続確認実行
            try:
                ROGIN_PRONPT = "\$|#"       # ログインプロンプト文字列
                TIMEOUT      = 5            # タイムアウト値設定
                sess = pexpect.spawn(sshCom , timeout=TIMEOUT)
                #sess.logfile = sys.stdout   # 標準出力★ 
                promptLog = open('promnpt.log','wb')
                sess.logfile = promptLog   # 標準出力★ 
                sess.expect(ROGIN_PRONPT)
                sess.sendline("uname -n")
                sess.expect(ROGIN_PRONPT)
                sess.sendline("echo $?")
                sess.expect(ROGIN_PRONPT)
                #subprocess.call("echo $?" , shell=True)
                resultLogFile.write(" : OK")
            # ssh接続失敗
            except:
                resultLogFile.write(" :    NG!")
                continue


# Main
if __name__ == "__main__":
    #testFunc()
    #sshTest()
    #fileReadTest()
    fileRead()



